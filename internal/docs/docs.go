// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/authorize": {
            "get": {
                "description": "OAuth 2.0 Authorization Mediation Endpoint.\nSee https://datatracker.ietf.org/doc/html/draft-ietf-oauth-browser-based-apps#name-token-mediating-backend",
                "summary": "Get a token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth 2.0 Redirect URI",
                        "name": "redirect_uri",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OAuth 2.0 State",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "PKCE Code Challenge",
                        "name": "code_challenge",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "PKCD Code Challenge Method",
                        "name": "code_challenge_method",
                        "in": "query"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    }
                }
            }
        },
        "/api/token": {
            "post": {
                "description": "OAuth 2.0 Token Mediation Endpoint.\nSee https://datatracker.ietf.org/doc/html/draft-ietf-oauth-browser-based-apps#name-token-mediating-backend",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "OAuth 2.0 Authorization Code",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "PKCE Code Verifier",
                        "name": "code_verifier",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "OAuth 2.0 Redirect URI",
                        "name": "redirect_uri",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    }
                }
            }
        },
        "/api/validate": {
            "get": {
                "security": [
                    {
                        "OAuth2Entra": []
                    }
                ],
                "summary": "Get a token",
                "responses": {}
            }
        }
    },
    "securityDefinitions": {
        "OAuth2Entra": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "http://localhost:8080/api/authorize",
            "tokenUrl": "http://localhost:8080/api/token"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Entra Playground API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
